function vect_int_op_aff(x : int^2)
  returns (y : int^2)
let
  y = x;
tel

function vect_int_op_rev(x : int^2)
  returns (y : int^2)
let
  y = reverse x;
tel

function vect_int_op_concat(x : int^2; z : int^2)
  returns (y : int^4)
let
  y = x @ z;
tel


function vect_int_op_def(x : int; z : int)
  returns (y : int^2)
let
  y = [x, z];
tel


function vect_int_op_index(x : int^2)
  returns (y : int)
let
  y = x[0];
tel

function vect_int_op_caret(x : int)
  returns (y : int^2)
let
  y = 3^2;
tel

function vect_int_op_slice(x : int^4)
  returns (y : int^2)
let
  y = x[1..2];
tel




function vect_bool_op_aff(x : bool^2)
  returns (y : bool^2)
let
  y = x;
tel

function vect_bool_op_rev(x : bool^2)
  returns (y : bool^2)
let
  y = reverse x;
tel

function vect_bool_op_concat(x : bool^2; z : bool^2)
  returns (y : bool^4)
let
  y = x @ z;
tel


function vect_bool_op_def(x : bool; z : bool)
  returns (y : bool^2)
let
  y = [x, z];
tel


function vect_bool_op_index(x : bool^2)
  returns (y : bool)
let
  y = x[0];
tel

function vect_bool_op_caret(x : bool)
  returns (y : bool^2)
let
  y = true^2;
tel

function vect_bool_op_slice(x : bool^4)
  returns (y : bool^2)
let
  y = x[1..2];
tel



function vect_real_op_aff(x : real^2)
  returns (y : real^2)
let
  y = x;
tel

function vect_real_op_rev(x : real^2)
  returns (y : real^2)
let
  y = reverse x;
tel

function vect_real_op_concat(x : real^2; z : real^2)
  returns (y : real^4)
let
  y = x @ z;
tel


function vect_real_op_def(x : real; z : real)
  returns (y : real^2)
let
  y = [x, z];
tel

function mat_real_op_def(x : real^2; z : real^2)
  returns (y : real^2^2)
let
  assume A1 : x > 0.0 and x < 1000.0;
  guarantee G1 : y > 0.0 and y < 1000.0;
  y = [x, z];
tel


function vect_real_op_index(x : real^2)
  returns (y : real)
let
  y = x[0];
tel

function vect_real_op_caret(x : real)
  returns (y : real^2)
let
  y = 3.2^2;
tel

function vect_real_op_slice(x : real^4)
  returns (y : real^2)
let
  y = x[1..2];
tel
